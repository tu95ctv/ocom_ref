<odoo>
    

     <record id="action_test_for_debug" model="ir.actions.server">
        <field name="name">action_test_for_debug</field>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="binding_model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">
                records.action_test_for_debug()
        </field>
    </record>

    <record id="action_test_create_for_debug" model="ir.actions.server">
        <field name="name">action_test_create_for_debug</field>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="binding_model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">
                records.action_test_create_for_debug()
        </field>
    </record>


    <record id="action_test_write_for_debug" model="ir.actions.server">
        <field name="name">action_test_write_for_debug</field>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="binding_model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">
                records.search([], limit=1).write({'line_ids':[(0,0,{'product_id':1}),(0,0,{'product_id':1})]})
        </field>
    </record>

    <!-- <record id="action_test_write_for_debug" model="ir.actions.server">
        <field name="name">action_test_write_for_debug</field>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="binding_model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">
                records.search([], limit=1).line_ids = [(0,0,{'product_id':1}),(0,0,{'product_id':1})]
        </field>
    </record> -->

    

    <!-- <record id="action_test_create_for_debug" model="ir.actions.server">
        <field name="name">action_test_create_for_debug</field>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="binding_model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">
                records.action_test_create_m2m_for_debug()
        </field>
    </record> -->

    <record id="cronjob_test" model="ir.cron">
        <field name="name">cronjob_test </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['stock.move'].browse(373)._should_bypass_reservation()</field>
    </record>

    <record id="cronjob_write_for_compute" model="ir.cron">
        <field name="name">cronjob_write_for_compute</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['tp.sale.order'].search([]).write({'a':10})</field>
    </record>


    <record id="tao_2k_record" model="ir.cron">
        <field name="name">tao_2k_record</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">
for i in range(1500):
    model.env['tp.sale.order'].create({'name':1500})</field>
    </record>




    <record id="cronjob_delete" model="ir.cron">
        <field name="name">cronjob_delete </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">
model._cr.execute('delete from mrp_workorder;delete from mrp_production;delete from stock_picking;delete from stock_move;delete from stock_move_line;delete from stock_picking;')
model.reset_stock_quant_all()
</field>
    </record>

    <record id="assign_for_tesst_prefetch" model="ir.cron">
        <field name="name">assign_for_tesst_prefetch </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">
model.env['tp.sale.order'].search([]).line_ids.product_id     
</field>
    </record>





    <record id="cronjob_delete1" model="ir.cron">
        <field name="name">cronjob_delete 1</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">
model._cr.execute('delete from mrp_workorder;delete from mrp_production;delete from stock_picking;delete from stock_move;delete from stock_move_line;delete from stock_picking;')
model.reset_stock_quant()
</field>
    </record>





    <record id="cronjob_delete_other" model="ir.cron">
        <field name="name">cronjob_delete </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model._cr.execute('delete from mrp_workorder;delete from mrp_production;delete from stock_picking;delete from stock_move;delete from stock_move_line;')</field>
    </record>


    <record id="cronjob_create" model="ir.cron">
        <field name="name">cronjob_create </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['mrp.workorder'].browse(242).with_context(skip_create_raw_material=1).create_child_wo(11)</field>
    </record>
    
    <record id="cronjob_test_create" model="ir.cron">
        <field name="name">cronjob_test_create </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['tp.sale.order'].create({'name':1, 'line_ids':[(0,0,{'product_id':1}),(0,0,{'product_id':1})]})</field>
    </record>


    <record id="cronjob_test_depends" model="ir.cron">
        <field name="name">cronjob_test_depends </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['tp.sale.order'].create({'name':1, 'a':1})</field>
    </record>



    <record id="cronjob_test_create_line_1_dong" model="ir.cron">
        <field name="name">cronjob_test_create_line_1_dong </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['tp.sale.order'].create({'name':1, 'line_ids':[(0,0,{'product_id':1})]})</field>
    </record>

    <record id="cronjob_test_create_line_1_dong" model="ir.cron">
        <field name="name">cronjob_test_create_line_1_dong </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env['tp.sale.order'].create({'name':1, 'line_ids': model.env.ref('tp_sale.tp_sale_line_1')})</field>
    </record>

    <record id="cronjob_test_write_line_1_dong" model="ir.cron">
        <field name="name">cronjob_test_write_line_1_dong </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.env.ref('tp_sale.tp_sale_order_1').write({'name':123, 'line_ids': model.env.ref('tp_sale.tp_sale_line_1')})</field>
    </record>


    <record id="cronjob_test_active_toggle_line" model="ir.cron">
        <field name="name">cronjob_test_active_toggle_line </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.cronjob_test_active_toggle_line()</field>
    </record>


    <record id="cronjob_test_asign_line_1_dong" model="ir.cron">
        <field name="name">cronjob_assign1 </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign1()</field>
    </record>

    <record id="cronjob_test_read_line_1_dong" model="ir.cron">
        <field name="name">cronjob_read1 </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.read1()</field>
    </record>

    <record id="cronjob_read_active_test_false" model="ir.cron">
        <field name="name">cronjob_read_active_test_false </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.cronjob_read_active_test_false()</field>
    </record>

    <record id="cronjob_read_active_test_false_after" model="ir.cron">
        <field name="name">cronjob_read_active_test_false_after </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.cronjob_read_active_test_false_after()</field>
    </record>

    <record id="cronjob_read_g_field" model="ir.cron">
        <field name="name">cronjob_read_g_field </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.read_g_field()</field>
    </record>


    <record id="cronjob_assign2" model="ir.cron">
        <field name="name">cronjob_assign2 </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign2()</field>
    </record>

    <record id="cronjob_assign3" model="ir.cron">
        <field name="name">cronjob_assign3</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign3()</field>
    </record>
    
    <record id="cronjob_assign4" model="ir.cron">
        <field name="name">cronjob_assign4</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign4()</field>
    </record>


    <record id="cronjob_assign5" model="ir.cron">
        <field name="name">cronjob_assign5</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign5()</field>
    </record>

    <record id="cronjob_assign6" model="ir.cron">
        <field name="name">cronjob_assign6</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign7()</field>
    </record>

    <record id="cronjob_assign7" model="ir.cron">
        <field name="name">cronjob_assign7</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.assign7()</field>
    </record>


    <record id="create_4" model="ir.cron">
        <field name="name">create_4</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.create4()</field>
    </record>



    <record id="cronjob_see_field_triggers" model="ir.cron">
        <field name="name">see_field_triggers</field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="tp_sale.model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.see_field_triggers()</field>
    </record>


    


    

    










    <!-- ####+NEW+#### -->


    <record id="action_test_create" model="ir.actions.server">
        <field name="name">action_test_create</field>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="binding_model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">records.env['tp.sale.order'].create({'name':1, 'line_ids':[(0,0,{'product_id':1}),(0,0,{'product_id':1})]})</field>
    </record>

   

    <record id="action_test_create1" model="ir.actions.server">
        <field name="name">action_test_create1</field>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="binding_model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">records.env['tp.sale.order'].action_test_create1()</field>
    </record>


    <record id="cronjob_reset_stock_quant" model="ir.cron">
        <field name="name">cronjob_reset_stock_quant </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">model.reset_stock_quant()</field>
    </record>


    <record id="cronjob_test_new" model="ir.cron">
        <field name="name">test_new </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.test_new()</field>
    </record>


    <record id="cronjob_test_group" model="ir.cron">
        <field name="name">cronjob_test_group </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="model_tp_sale_order"/>
        <field name="state">code</field>
        <field name="code">model.env['report.appointment'].read_group([],['date'],['date:week'])</field>
    </record>







    <!-- <record id="action_test_create" model="ir.cron">
        <field name="name">action_test_create </field>
        <field name="active">True</field> 
        <field name="user_id" ref="base.user_root"/>
        <field name="interval_number">1</field>
        <field name="interval_type">minutes</field>
        <field name="numbercall">0</field>
        <field eval="False" name="doall"/>
        <field name="model_id" ref="base.model_ir_cron"/>
        <field name="state">code</field>
        <field name="code">records.env['tp.sale.order'].create({'name':1, 'line_ids':[(0,0,{'product_id':1}),(0,0,{'product_id':1})]})</field>
    </record> -->





    
    
</odoo>
